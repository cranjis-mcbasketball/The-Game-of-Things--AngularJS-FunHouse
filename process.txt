1. Set up environment, file system, and dependencies

2. Added additional components, routing
  - Added components for 4 players
  - Added routing
  - created app module and allocated dependencies


  3. Added html templates and drag-drop functionality with cdk

  4. Beginning, middle, and end items sort themselves automatically.

  5. Began implementing ngrx state management for response submissions and winner board, experimenting with scss for the drag/drop lists.

  6. Created table layout prototype for Player3 html, and fixed ordering algorithm bug pertaining to middle/end currentIndex/previousIndex swapping out

  7. Updated html and css for all four players

  8. Switched from dummy data to HTTP using data from fragments.json (algorithm pulls pseudo-random indeces for the 6 beginning, middle, end choices for each player)

  9. Implemented store for GameState with actions, reducers effects, models to increase roundNum by one and change prompt whn 'New Round' button is clicked

  10. Completed prompt fetcher service and effects and round incrementer 

  11. Fixed bug so that new round only increments once o click, and prompt only renders the string property

  12. Created NewGame action for click of new game button to set round back to 1

  13. Created CDK drag-drop area for judge to drag and drop responses in order of favorite to least favorite

  14. Reformatted fragment boxes to make a more compact user interface and
  experimented with submission form options